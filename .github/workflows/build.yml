name: build

on:
  create:
    tags:
      - v*
  push:
    branches:
      - main
  pull_request:
  schedule:
    # At 00:00 on Monday
    - cron: '0 0 * * 1'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  # renovate: datasource=pypi depName=pdm versioning=pep440
  PDM_VERSION: 2.12.3
  # renovate: datasource=pypi depName=pre-commit versioning=pep440
  PRE_COMMIT_VERSION: 3.5.0

jobs:
  test:
    name: test - python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    permissions:
      contents: read

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'

    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup PDM
        uses: pdm-project/setup-pdm@c050bdcb2405837648035b6678c75609d53a749f # v4
        with:
          python-version: ${{ matrix.python-version }}
          version: ${{ env.PDM_VERSION }}
          cache: true

      - name: Set up Mattermost instance
        run: tests/scripts/setup-mattermost.sh

      - name: Install dependencies
        run: pdm install --frozen-lockfile

      - name: Run tests
        run: >-
          pdm run pytest
          --color=yes
          --cov
          --cov-report="xml:coverage-reports/coverage-${PYTHON_VERSION}.xml"
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}

      - name: Archive coverage report
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: coverage-reports-${{ matrix.python-version }}
          path: coverage-reports/coverage-${{ matrix.python-version }}.xml

  lint:
    name: lint - python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    permissions:
      contents: read

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'

    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up pre-commit
        run: pipx install --python=python "pre-commit==${PRE_COMMIT_VERSION}"

      - name: Set up pre-commit cache
        uses: actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319 # v4.0.1
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ env.pythonLocation }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run pre-commit
        run: pre-commit run --show-diff-on-failure --color=always --all-files

  sonar-scan:
    name: sonar scan
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read

    timeout-minutes: 15

    steps:
      # Full checkout for SonarQube
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Download coverage reports
        uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
        with:
          pattern: coverage-reports-*
          path: coverage-reports/
          merge-multiple: true

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@49e6cd3b187936a73b8280d59ffd9da69df63ec9 # v2.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  publish:
    name: publish
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: [lint, test, sonar-scan]
    runs-on: ubuntu-latest
    environment:
      name: PyPI
      url: https://pypi.org/project/mmemoji
    permissions:
      contents: read
      id-token: write

    timeout-minutes: 15

    env:
      PYTHON_VERSION: '3.12'

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup PDM
        uses: pdm-project/setup-pdm@c050bdcb2405837648035b6678c75609d53a749f # v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          version: ${{ env.PDM_VERSION }}
          cache: true

      - name: Build
        run: pdm build

      - name: Publish to PyPi
        run: pdm publish
