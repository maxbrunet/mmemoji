name: build

on:
  create:
    tags:
      - v*
  push:
    branches:
      - main
  pull_request:
  schedule:
    # At 00:00 on Monday
    - cron: '0 0 * * 1'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: test - python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    permissions:
      contents: read

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'

    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247 # v3.5.1

      - name: Install Poetry
        run: pipx install "$(<poetry-requirements.txt)"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # v4.5.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Set up Mattermost instance
        run: tests/scripts/setup-mattermost.sh

      - name: Install dependencies
        run: poetry install --verbose

      - name: Run tests
        run: >-
          poetry run pytest
          --color=yes
          --cov
          --cov-report=xml:coverage-reports/coverage-${{ matrix.python-version }}.xml

      - name: Archive coverage report
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: coverage-reports
          path: coverage-reports/coverage-${{ matrix.python-version }}.xml

  lint:
    name: lint - python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    permissions:
      contents: read

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'

    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247 # v3.5.1
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # v4.5.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pre-commit-requirements.txt

      - name: Set up pre-commit
        run: pip install -r pre-commit-requirements.txt

      - name: Set up pre-commit cache
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ env.pythonLocation }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run pre-commit
        run: pre-commit run --show-diff-on-failure --color=always --all-files
        # FIXME: This can be removed after dropping Python 3.7
        # https://github.com/PyCQA/isort/issues/2077
        env:
          SKIP: isort

  sonar-scan:
    name: sonar scan
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read

    timeout-minutes: 15

    steps:
      # Full checkout for SonarQube
      - name: Checkout
        uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247 # v3.5.1
        with:
          fetch-depth: 0

      - name: Download coverage reports
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: coverage-reports
          path: coverage-reports/

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@db501078e936e4b4c8773d1bb949ba9ddb7b6b6a # v1.9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  publish:
    name: publish
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: [lint, test, sonar-scan]
    runs-on: ubuntu-latest
    permissions:
      contents: read

    timeout-minutes: 15

    env:
      PYTHON_VERSION: '3.11'

    steps:
      - name: Checkout
        uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247 # v3.5.1

      - name: Install Poetry
        run: pipx install "$(<poetry-requirements.txt)"

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # v4.5.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry

      - name: Build
        run: poetry build

      - name: Publish to PyPi
        run: poetry publish
        env:
          POETRY_HTTP_BASIC_PYPI_USERNAME: __token__
          POETRY_HTTP_BASIC_PYPI_PASSWORD: ${{ secrets.PYPI_TOKEN }}
